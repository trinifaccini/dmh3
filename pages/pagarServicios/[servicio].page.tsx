import * as React from "react";
import type { NextPage } from "next";
import Head from "next/head";
import PageHomeLayout from "integrador/components/layouts/layout-home.component";
import { Box, Stack } from "@mui/system";
import { useEffect, useState } from "react";
import { Step, StepLabel, Stepper, Typography, useMediaQuery } from "@mui/material";
import { theme } from "integrador/styles/material-theme";
import ChevronRightIcon from "@mui/icons-material/ChevronRight";
import ChargeServiceNumber from "integrador/components/pagarServicios/ChargeServiceNumber.component";
import { useRouter } from "next/router";
import ServicePayment from "integrador/components/pagarServicios/ServicePayment";
import usePaymentService from "integrador/components/contexts/usePaymentContext";
import PaymentResume from "integrador/components/pagarServicios/PaymentResume";
import ErrorBalance from "integrador/components/ErrorBalance";

export const PagarServicio: NextPage = () => {
  const laptopOrDesktop = useMediaQuery(theme.breakpoints.up("laptop"));
  const desktop = useMediaQuery(theme.breakpoints.up("desktop"));
  const mobile = useMediaQuery(theme.breakpoints.down("tablet"));
  const router = useRouter();
  const { servicio } = router.query;
  const { state: paymentServiceState, dispatch: paymentServiceDispatch } =
    usePaymentService();

  let laptop;
  if (laptopOrDesktop && !desktop) laptop = true;

 useEffect(() => {
    paymentServiceDispatch({type: "SET_SERVICE", payload: servicio as string});
    return ()=>{paymentServiceDispatch({type: "SET_STEP", payload: 0});}
  }, [servicio]);

  const goPreviousStep = (actualStep:number) => {

    if(actualStep < paymentServiceState.method.step)
      paymentServiceDispatch({type: "SET_STEP", payload: actualStep})
  }

  const steps = ["Cuenta", "MÃ©todo de pago", "Resumen"];

  return (
    <>
      <Head>
        <title>Pagar Servicio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack
        sx={{
          width: "100%",
          alignItems: "center",
          justifyContent: "start",
        }}
        mt={laptopOrDesktop ? "1rem" : mobile ? "0" : "3rem"}
        spacing={laptop ? 1.3 : 2.5}
      >
        {mobile && (
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
              width: "90%",
              marginTop: "15px",
            }}
            onClick={() => {
              router.push("/pagarServicios");
            }}
          >
            <ChevronRightIcon fontSize="small" sx={{ color: "grey" }} />
            <Typography variant="body1">Pagar servicios</Typography>
          </Box>
        )}

        <Stepper activeStep={paymentServiceState.method.step} sx={{width: laptopOrDesktop ? '70%' : '90%', marginTop: '1rem'}}>

          {steps.map((label, index) => {
            return (
              <Step key={label} sx={{cursor: 'pointer', [`& .MuiStepLabel-label`]: {color: 'black', textAlign: 'center'}}} onClick={() => goPreviousStep(index)}>
                <StepLabel >{label}</StepLabel>
              </Step>
            );
          })}
        </Stepper>

        <>

          {paymentServiceState.method.step === 0 && <ChargeServiceNumber/>}
          {paymentServiceState.method.step  === 1 && <ServicePayment/>}
          {paymentServiceState.method.step  === 2 && <PaymentResume />}
        </>
          {paymentServiceState.method.step  === 3 && <ErrorBalance />}
      </Stack>
    </>
  );
};

(PagarServicio as any).Layout = PageHomeLayout;

export default PagarServicio;