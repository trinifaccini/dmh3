import { Button, Container, Typography, useMediaQuery } from "@mui/material";
import useProfile from "integrador/components/contexts/useProfile";
import ProfileInput from "integrador/components/forms/input/profile-input.component";
import BodySingle from "integrador/components/layouts/body/single/body-single.component";
import PageHomeLayout from "integrador/components/layouts/layout-home.component";
import SignInLayout from "integrador/components/layouts/layout-sign-in.component";
import useCopyToClipboard from "integrador/services/useCopyToClipboard.services";
import { theme } from "integrador/styles/material-theme";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";

const NewEmail = () => {
  const [value, copy] = useCopyToClipboard();

  const [error, setError] = useState("");
  const [updated, setUpdated] = useState(false);
  const [change, setChange] = useState(false);
  const [cancel, setCancel] = useState(false);
  const { state, dispatch } = useProfile();
  const router = useRouter();
  let newEmail = Array.isArray(router.query) ? router.query[0] : router.query;

  console.log(newEmail);
  console.log(router);

  const setData = (data: any) => {
    dispatch({ type: "email", payload: data.email });
  };

  const edit = () => {
    const token = localStorage.getItem("token");
    const userId = localStorage.getItem("user_id");

    editData(token, userId);
  };

  const editData = (token: string | null, userId: string | null) => {
    const body = {
      email: newEmail.email,
    };
    const requestOptions = {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
        Authorization: token ? token : "0",
      },
      body: JSON.stringify(body),
    };

    fetch(
      `https://digitalmoney.ctd.academy/api/users/${userId}`,
      requestOptions
    )
      .then(async (response) => {
        if (response.ok) {
          setData(newEmail);
          setChange(false);
        } else {
          setError("Error 1");
          setChange(false);
          // setLoading(false);
        }
      })
      .catch((error) => {
        setError(error.message);
        console.log("Hubo un problema con la petición Fetch:" + error.message);
        setChange(false);
      });
  };

  useEffect(() => {
    const token = localStorage.getItem("token");
    const userId = localStorage.getItem("user_id");
    //!token ? router.push("/login") : null;
  }, []);

  const handleClick = () => {
    router.push("/profile");
    edit();
  };
  const laptopOrDesktop = useMediaQuery(theme.breakpoints.up("laptop"));

  return (
    <>
      <Head>
        <title>Confirmar cambio de mail</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BodySingle>
        <Container
          sx={{
            display: "flex",
            flexWrap: "wrap",
            justifyContent: "center",
            height: "100%",
            alignContent: laptopOrDesktop ? "center" : "start",
          }}
          maxWidth={false}
        >
          <Container
            sx={{
              width: laptopOrDesktop ? "35%" : "55%",
              paddingTop: laptopOrDesktop ? "" : "35%",
            }}
          >
            <Typography variant="h4" textAlign="center" color="white">
              ¿Confirmas que tu nuevo email es {newEmail.email} ?
            </Typography>
            <Button
              onClick={handleClick}
              fullWidth
              color="secondary"
              variant="contained"
              sx={{
                borderRadious: "10px",
                height: "100%",
                padding: "5px",
                marginTop: "20px",
                fontSize:"16px"
              }}
            >
              Aceptar
            </Button>

          </Container>
        </Container>
      </BodySingle>
    </>
  );
};


export default NewEmail;
